name: Scheduled Data Scraper

on:
  # This section defines the trigger for the workflow.
  # The 'schedule' trigger uses cron syntax to run the job at a specific time.
  # This example runs daily at midnight UTC.
  schedule:
    - cron: '0 0 * * *'

  # The 'workflow_dispatch' trigger allows you to manually run the workflow from the GitHub UI.
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get high lakes json
        run: python get_high_lakes.py

      - name: Get high lakes plants json
        run: python get_high_lakes_overabundant.py

      - name: Get high lakes plants json
        run: python get_high_lakes_plants.py

      - name: Create flattened json
        run: python flatten.py

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Commit and push if content has changed
        uses: EndBug/add-and-commit@v9
        with:
          author_name: 'GitHub Actions'
          author_email: 'actions@github.com'
          message: '${{ steps.date.outputs.date }}: Updated from WDFW'
          add: '*.json'
